---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";

const TAGS = {
  REACT: {
    name: "React",
    class: "bg-blue-500 text-white",
    icon: NextJS, // Cambié a NextJS para usar un icono como ejemplo, pero usa el que corresponda a React.
  },
  MYSQL: {
    name: "MySQL",
    class: "bg-[#f29f5f] text-white",
    icon: Tailwind, // Cambié a Tailwind como placeholder. Cambia al icono de base de datos si tienes uno.
  },
  GOOGLE_API: {
    name: "Google API",
    class: "bg-[#4285F4] text-white",
    icon: Tailwind, // Cambié al icono de Tailwind, pero puedes reemplazarlo con el icono adecuado.
  },
};

const PROJECTS = [
  {
    title: "Netflix Clone",
    description:
      "A Netflix clone built with Astro, Tailwind CSS, and TypeScript. Features a responsive design and dynamic content loading to mimic the Netflix experience.",
    link: "https://netflux-clon.netlify.app/", // Cambia por el enlace del proyecto si está en línea.
    github: "https://github.com/ImYetiDev/clon-netflix", // Cambia por el enlace de GitHub si está disponible.
    image: "/netflix.png", // Cambia esta ruta a la imagen
    tags: [TAGS.REACT],
  },
  {
    title: "Globant People Events Platform",
    description:
      "An internal platform for Globant to manage events and display metrics more efficiently. Built with React for dynamic user interaction.",
    link: "https://people-events-platform.web.app/", // Cambia por el enlace del proyecto si está disponible.
    github: "", // Cambia por el enlace de GitHub si está disponible.
    image: "/pep.png", // Cambia esta ruta a la imagen del proyecto.
    tags: [TAGS.REACT],
  },
  {
    title: "Bike Rental Application",
    description:
      "A bike rental platform with role management, MySQL database integration, and real-time bike location tracking using Google Maps API. Developed during the Senasoft 2024 event.",
    link: "https://github.com/ImYetiDev/RideNow-Bootcamp-IBM", // Cambia por el enlace del proyecto si está en línea.
    github: "https://github.com/ImYetiDev/RideNow-Bootcamp-IBM", // Cambia por el enlace de GitHub si está disponible.
    image: "/", // Cambia esta ruta a la imagen que prefieras.
    tags: [TAGS.REACT, TAGS.MYSQL, TAGS.GOOGLE_API],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class=" flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt={title}
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
